// MDL v1 utf8
network  {
  watchlist = ""
}
module RunPythonScript {
  internal  {
    frame = "753 453 128 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "1996 268 1335 596"
        sizeHint = "629 300"
        wasOpen = yes
      }
    }
  }
  fields  {
    instanceName = RunPythonScript
    in0 = ""
    in1 = ""
    in2 = ""
    in3 = ""
    in4 = ""
    in5 = ""
    in6 = ""
    in7 = ""
    in8 = ""
    in9 = ""
    editComments = FALSE
    inComment0 = in0
    inComment1 = in1
    inComment2 = in2
    inComment3 = in3
    inComment4 = in4
    inComment5 = in5
    inComment6 = in6
    inComment7 = in7
    inComment8 = in8
    inComment9 = in9
    autoApply0 = TRUE
    autoApply1 = TRUE
    autoApply2 = TRUE
    autoApply3 = TRUE
    autoApply4 = TRUE
    autoApply5 = TRUE
    autoApply6 = TRUE
    autoApply7 = TRUE
    autoApply8 = TRUE
    autoApply9 = TRUE
    out0 = ""
    out1 = ""
    out2 = ""
    out3 = ""
    out4 = ""
    out5 = ""
    out6 = ""
    out7 = ""
    out8 = ""
    out9 = ""
    outComment0 = out0
    outComment1 = out1
    outComment2 = out2
    outComment3 = out3
    outComment4 = out4
    outComment5 = out5
    outComment6 = out6
    outComment7 = out7
    outComment8 = out8
    outComment9 = out9
    initCode = "# Initialize global variables and functions
global CTX
# Use this to access the network context
CTX=ctx.owner().owner()"
    wakeUpCode = ""
    code = "*from multiresolutionimageinterface import multiresolutionimageinterface
import numpy as np
level = 0
r = multiresolutionimageinterface.MultiResolutionImageReader()
w = multiresolutionimageinterface.MultiResolutionImageWriter()
i = r.open(r"D:\\Temp\\T06-12822-II1-10.mrxs")
w.openFile(r"D:\\Temp\\test_python.tif")
w.setTileSize(512)
w.setCompression(multiresolutionimageinterface.LZW)
w.setDataType(multiresolutionimageinterface.UChar)
w.setColorType(multiresolutionimageinterface.RGB)
dims = i.getLevelDimensions(level)
a = np.zeros(512*512*4, dtype='ubyte')
w.writeImageInformation(dims[0],dims[1])
for y in range(0, dims[1], 512):
  print y
  for x in range(0, dims[0], 512):
    i.getUCharPatch(int(x*i.getLevelDownsample(level)),int(y*i.getLevelDownsample(level)),512,512,level,a)
    w.writeBaseImagePart(a.reshape(512,512,4)[:,:,2::-1].flatten())
w.finishImage()*"
    showFields = FALSE
    showInitCode = FALSE
    showWakeUpCode = FALSE
    showCode = TRUE
    showConsole = TRUE
  }
}
connections = ""
networkModel = ""
